spring:
  application:
    name: project

  datasource:
    # url: jdbc:postgresql://localhost:5432/postgres
    # username: postgres
    # password: secret
    project:
      url: ${SPRING_DATASOURCE_PROJECT_URL:jdbc:postgresql://project-db:5432/project}
      username: ${SPRING_DATASOURCE_PROJECT_USERNAME:ace}
      password: ${SPRING_DATASOURCE_PROJECT_PASSWORD:charitan}
      driver-class-name: org.postgresql.Driver
    project-deleted:
      url: ${SPRING_DATASOURCE_DELETED_URL:jdbc:postgresql://project-deleted-db:5432/project}
      username: ${SPRING_DATASOURCE_DELETED_USERNAME:ace}
      password: ${SPRING_DATASOURCE_DELETED_PASSWORD:charitan}
      driver-class-name: org.postgresql.Driver
    project-completed:
      url: ${SPRING_DATASOURCE_DELETED_URL:jdbc:postgresql://project-completed-db:5432/project}
      username: ${SPRING_DATASOURCE_DELETED_USERNAME:ace}
      password: ${SPRING_DATASOURCE_DELETED_PASSWORD:charitan}
      driver-class-name: org.postgresql.Driver

    #   hikari:
    #     pool-name: project-deleted-pool
    # completed:
    #   url: jdbc:postgresql://localhost:5432/completed_db
    #   username: user
    #   password: pass
    # pending:
    #   url: jdbc:postgresql://localhost:5432/pending_db
    #   username: user
    #   password: pass

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer    
    consumer:
      group-id: project-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      spring:
        json:
          trusted:
            packages: "ace.charitan.*"
  sql:
    init:
      mode: always  # Ensures data.sql runs even with Hibernate ddl-auto
      # mode: never
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true 
    properties:
      hibernate:
        format-sql: true 
        use-sql-comments: true 
        dialect: org.hibernate.dialect.PostgreSQLDialect
    # hibernate:
    #   ddl-auto: validate


eureka:
  client:
    healthcheck:
      enabled: true
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    initial-instance-info-replication-interval-seconds: 40
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v1/api-docs

server:
  port: 0

logging:
  level:
    org:
      hibernate: 
        SQL: DEBUG
        type:
          descriptior: 
            sql: 
              BasicBinder: TRACE

redis:
  host-name: project-master
  port: '6379'

data:
  charitan-id: ed6f7fe9-9f2d-4b85-b189-31b38cf8122b